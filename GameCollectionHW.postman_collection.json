{
	"info": {
		"_postman_id": "8c8546cb-e631-4d63-b42e-2eb8baac9fdf",
		"name": "GameCollectionHW",
		"description": "GameSystem Methods",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET requests",
			"item": [
				{
					"name": "GetAll ",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:1961/api/games/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1961",
							"path": [
								"api",
								"games",
								"all"
							]
						},
						"description": "List all available games -> api/games/all"
					},
					"response": []
				},
				{
					"name": "GetByTitle",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:1961/api/games/CS",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1961",
							"path": [
								"api",
								"games",
								"CS"
							]
						},
						"description": "List game by given game name. If game doesn’t exist, status 404 must be returned to the user -> /api/games/{GameTitle}"
					},
					"response": []
				},
				{
					"name": "GetById",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:1961/api/games/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1961",
							"path": [
								"api",
								"games",
								"1"
							]
						},
						"description": "List game by given game ID. If game doesn’t exist, status 404 must be returned to the user -> /api/games/{GameId}"
					},
					"response": []
				}
			]
		},
		{
			"name": "POST requests",
			"item": [
				{
					"name": "PostNewGame",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"GameId\" : 6,\n\t\"GameTitle\": \"GTA\"\n\n}"
						},
						"url": {
							"raw": "http://localhost:1961/api/games",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1961",
							"path": [
								"api",
								"games"
							]
						},
						"description": "Adds new game. If game with the same name already exists, status 400 must be returned to the user -> /api/games"
					},
					"response": []
				}
			]
		},
		{
			"name": "PUT requests",
			"item": [
				{
					"name": "PutToModifyGame",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"GameId\" : 3,\n\t\"GameTitle\" : \"lol\"\n}"
						},
						"url": {
							"raw": "http://localhost:1961/api/games/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1961",
							"path": [
								"api",
								"games",
								"3"
							]
						},
						"description": "Modify the whole game. If game doesn’t exist, status 404 must be returned to the user -> /api/games/{GameId}"
					},
					"response": []
				}
			]
		},
		{
			"name": "DELETE requests",
			"item": [
				{
					"name": "DeleteGame",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:1961/api/games/5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1961",
							"path": [
								"api",
								"games",
								"5"
							]
						},
						"description": "Delete existing game. If game doesn’t exist, status 404 must be returned to the user -> /api/games/{GameId}"
					},
					"response": []
				}
			]
		}
	]
}